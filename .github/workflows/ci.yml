name: ci

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install dependencies
        run: go get ./...

      - name: Build
        run: |
          go build -v -o goqoa.exe ./...
          ls

      - name: Go Test
        run: go test -v ./...

      - uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: goqoa.exe

  build-mac:
    runs-on: macos-latest
    env:
      GO111MODULE: "on"
      CGO_ENABLED: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install dependencies
        run: go get ./...

      - name: Build
        run: go build -v ./...

      - name: Go Test
        run: go test -v ./...

      - uses: actions/upload-artifact@v3
        with:
          name: mac-artifact
          path: goqoa

  build-linux:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      CGO_ENABLED: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install dependencies
        run: |
          go get ./...
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libmp3lame-dev

      - name: Build
        run: go build .

      - name: Go Test
        run: go test -v ./...

      - name: Spec Test
        run: |
          sudo cp goqoa /usr/bin/
          bash check_spec.sh

      - uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: goqoa

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build-windows
      - build-mac
      - build-linux
    permissions:
      contents: write

    runs-on: ubuntu-latest
    # env:
    #   GO111MODULE: "on"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: my-artifact
      - name: Display structure of downloaded files
        run: ls -R

      # - name: Install Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: "1.21"

      # - name: Install dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libasound2-dev libmp3lame-dev

      # - name: Release Go binaries on tags
      #   uses: goreleaser/goreleaser-action@v4
      #   with:
      #     version: latest
      #     args: release --clean
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
